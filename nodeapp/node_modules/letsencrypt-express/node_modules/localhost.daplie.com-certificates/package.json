{
  "name": "localhost.daplie.com-certificates",
  "version": "1.1.2",
  "description": "HTTPS / TLS certs for localhost.daplie.com to be used in testing and development.",
  "main": "lib/index.js",
  "scripts": {
    "test": "node lib/index.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Daplie/localhost.daplie.com-certificates.git"
  },
  "keywords": [
    "https",
    "ssl",
    "localhost",
    "self-signed",
    "self",
    "signed",
    "cert",
    "certs",
    "certificates",
    "tls",
    "example",
    "demo",
    "easy"
  ],
  "author": {
    "name": "AJ ONeal",
    "email": "coolaj86@gmail.com",
    "url": "http://coolaj86.com/"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/Daplie/localhost.daplie.com-certificates/issues"
  },
  "homepage": "https://github.com/Daplie/localhost.daplie.com-certificates#readme",
  "readme": "# HTTPS certs for localhost development\n\nHTTPS certificates for `localhost.daplie.com`, free for anyone to use in testing and development.\n\nFor the sake of keywords: most people (including myself) think of these as \"SSL certificates\" but they are, in fact, signed RSA keypairs used for TLS encryption.\n\n## QuickStart\n\nIf you've done this kind of thing before:\n\n```bash\ngit clone https://github.com/Daplie/localhost.daplie.com-certificates.git ./certs\n```\n\n**Misnomer Alert**: Most webservers and software call for a **keypair** consisting of **server.crt** and **server.key**.\nIn most cases these actually correspond to **fullchain.pem** (crt) and **privkey.pem** (key).\n\n<https://localhost.daplie.com> is an alias for <https://localhost> or <https://127.0.0.1>.\n\nThe benefit of using this certificate for localhost development is that you will have the exact same security policies\nand APIs available in development as you would have in production.\n\n### Let's Encrypt Certificate Conventions\n\nThe certificates are named according to the [Let's Encrypt](https://letsencrypt.org) conventions:\n\n* privkey.pem - the server private key\n* cert.pem - includes the bare server certficate only\n* chain.pem - includes intermediate certificates only\n* fullchain.pem - includes cert.pem and chain.pem\n* root.pem - (proposed) includes any Root CAs\n\nThis convention is still subject to change.\nSee <https://github.com/letsencrypt/letsencrypt/issues/608>\nand <https://groups.google.com/a/letsencrypt.org/forum/#!topic/client-dev/jE5uK4lPx5g>\nto follow the conversation.\n\n## Screencast + Article\n\n[![screencast thumbnail](https://i.imgur.com/F8aoJg5.png)](https://youtu.be/r92gqYHJc5c)\n\n[Create a CSR in PEM format for your HTTPS cert](https://coolaj86.com/articles/how-to-create-a-csr-for-https-tls-ssl-rsa-pems/)\n\n[Examine HTTPS Certs with OpenSSL in Terminal](https://coolaj86.com/articles/how-to-examine-an-ssl-https-tls-cert/)\n\n## Examples\n\n### node / io.js\n\n**Quick and Dirty:**\n\n```bash\nnpm install --save-dev localhost.daplie.com-certificates\n```\n\n```javascript\n'use strict';\n\nvar https = require('https');\nvar server = https.createServer(require('localhost.daplie.com-certificates'));\nvar port = process.argv[2] || 8443;\n\nserver.on('request', function (req, res) {\n  res.end('[' + req.method + ']' + ' ' + req.url);\n});\nserver.listen(port, function () {\n  console.log('Listening', server.address());\n});\n```\n\n<https://localhost.daplie.com:8443/>\n\n**DIY**\n\nInstead of simply requiring `localhost.daplie.com-certificates` you will clone the certs yourself\nand provide the options object.\n\n```bash\ngit clone https://github.com/Daplie/localhost.daplie.com-certificates.git ./certs\n```\n\n```javascript\nvar fs = require('fs');\nvar path = require('path');\nvar certsPath = path.join(__dirname, 'certs');\n\n//\n// SSL Certificates\n//\nvar options = {\n  key: fs.readFileSync(path.join(certsPath, 'privkey.pem'), 'ascii')\n, cert: fs.readFileSync(path.join(certsPath, 'fullchain.pem'), 'ascii')\n/*\n  // only for verification\n, ca: [\n    fs.readFileSync(path.join(certsPath, 'root.pem'))\n  ]\n, requestCert: true\n*/\n, rejectUnauthorized: true\n, SNICallback: function (domainname, cb) {\n    // normally we would check the domainname choose the correct certificate,\n    // but for this demo we'll always use this one (the default) instead\n    cb(null, require('tls').createSecureContext(options));\n  }\n, NPNProtcols: ['http/1.1']\n};\n\nvar server = https.createServer(options);\n```\n\n### Caddy\n\n* TODO\n\n\n## How this was created\n\nI created a directory `~/Code/localhost.daplie.com-certificates` (this repository, actually) and ran the following commands from that directory:\n\n\n\n### 01 Create a Private Key\n\n`01-create-key.sh`:\n```bash\nmkdir -p certs/server\nopenssl genrsa \\\n  -out certs/server/my-server.key.pem \\\n  2048\n```\n\n### 02 Create a Certificate Signing Request (CSR)\n\n`02-create-csr.sh`:\n```bash\nmkdir -p certs/tmp\nopenssl req -new \\\n  -sha256 \\\n  -key certs/server/my-server.key.pem \\\n  -out certs/tmp/my-server.csr.pem \\\n  -subj \"/C=US/ST=Utah/L=Provo/O=Daplie Inc/CN=localhost.daplie.com\"\n```\n\n### 03 Copy and Paste the CSR to name.com's console\n\n`cat certs/tmp/my-server.csr.pem`:\n```\n-----BEGIN CERTIFICATE REQUEST-----\nMIICpTCCAY0CAQAwYDELMAkGA1UEBhMCVVMxDTALBgNVBAgTBFV0YWgxDjAMBgNV\nBAcTBVByb3ZvMRMwEQYDVQQKEwpEYXBsaWUgSW5jMR0wGwYDVQQDExRsb2NhbGhv\nc3QuZGFwbGllLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ3j\n1nY+5bJf2oWVRGCrwTQ7Mw/qzMMu62RgGZawN2d6QTDSYBSCZdyuEpwOiDy6AO9x\nWqo6WJx7yu6Yv04syZEbc5tLMtX77YROAF7GkRrBIkqPtSkKnDYQm0wW9I9escgy\nGQ3itSSHU/Oijv6Lj8xUigM+WM+DE860U1K0QID/eQPYOWQhj/A6WQXxPWWDsDxD\n3ZpVeLIgeZe5usd1PhuGvhhFvK+W0QHZ4D7PgsvKrP6Qwoc3VNiEwlQa6v8L8t7e\nw2uEXa96o4J08GiZPClbAng8+Y3SSp5PQ3cPUIlWu3hSPxb03t8+yC5gB6Gzl7To\nwJwBPcOXUSo00QnD96UCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCP04HRbk1x\ni9ESsClWoClyG8VZCPGcG2KooQ2tqKaCBRGG9hNz1vm1SzUyclKz1CMZgI5i+b02\nh/zeJRHkQ9ztT07oRUmKK1/tDt88J3AH3wIcnMEyzT3kHRuJbrZ81hEz417tePhs\nv4/NziQc8Xv8WJP6sjcg72L5jlV0qrc3BYkdOqgjIOMOJoo7pNCbmh0xCvW5FURc\nuG1AUaFPaDcOshT3YOlH9MP5/SoYl5X8y1SJVbNDOrQzJo8Erw1HoxOX4tRTd3F+\nBalBlrLZQMvgtOkMNErebgARAz6xlfzXpOf7G0AkvllHJAnzTmSalzR5hDWdfcbq\nmnxzBDw4+wI+\n-----END CERTIFICATE REQUEST-----\n```\n\n### 04 Follow Validation Procedure\n\nI bought the domain on name.com so I could have used the automatic validation process,\nbut since I have my GLUE records and DNS management for the daplie.com DNS elsewhere and\nI didn't want to go through the hassle of the validation records, I used the registered admin\nemail address (which I happened to already have setup through mailgun).\n\nThis is the email I got:\n\n```\nORDER APPROVAL\n\nDear Domain Administrator,\n\nYou are receiving this email because you are the Domain Administrator for localhost.daplie.com and the person identified below has requested a RapidSSL certificate for:\n\nlocalhost.daplie.com\n\n\nApplicant Information:\n     Name:   AJ ONeal\n     Email:  coolaj86@gmail.com\n     Phone:  +1.3174266525\n\nAJ ONeal requests that you come to the URL below to review and approve this certificate request:\n\n     https://products.geotrust.com/orders/A.do?p=Ac8lMXMpxHsbZVlWJwBcF\n\nPlease follow the above link and click either the I APPROVE or I DO NOT APPROVE button.\n\nWhen you click I APPROVE the certificate will be issued and emailed to the Applicant, Approver, and Technical contacts.\n\nIf you click I DO NOT APPROVE the certificate application will be cancelled.\n\nThanks,\n\nRapidSSL Customer Support\nhttp://www.rapidssl.com/support\nHours of Operation: Mon - Fri 09:00 - 17:00 (EST)\nEmail:     orderprocessing@rapidssl.com\nLive Chat: https://knowledge.rapidssl.com/support/ssl-certificate-support/index.html\n```\n\nAnd once I clicked the link, this was the confirmation email I got back:\n\n```\nDear AJ ONeal,\n\nCongratulations! RapidSSL has approved your request for a RapidSSL certificate. Your certificate is included at the end of this email.\n\nINSTALLATION INSTRUCTIONS\n\n1. INSTALL CERTIFICATE:\nInstall the X.509 version of your certificate included at the end of this e-mail.\nFor installation instructions for your SSL Certificate, go to:\nhttps://knowledge.rapidssl.com/support/ssl-certificate-support/index?page=content&id=SO16226\n\n2. INTERMEDIATE CERTIFICATE ADVISORY:\nYou MUST install the RapidSSL intermediate Certificate on your server together with your Certificate or it may not operate correctly.\n\n** MICROSOFT IIS and TOMCAT USERS\nMicrosoft and Tomcat users are advised to download a PKCS #7 formatted certificate from the GeoTrust User Portal:\nhttps://products.geotrust.com/orders/orderinformation/authentication.do. PKCS #7 is the default format used by these vendors during installation and includes the intermediate CA certificate.\n\nYou can get your RapidSSL Intermediate Certificates at:\nhttps://knowledge.rapidssl.com/support/ssl-certificate-support/index?page=content&id=AR1548\n\n3. CHECK INSTALLATION:\nEnsure you have installed your certificate correctly at:\nhttps://knowledge.rapidssl.com/support/ssl-certificate-support/index?page=content&id=AR1549\n\n4. INSTALL THE RAPIDSSL SITE SEAL:\nAdditionally, as part of your SSL Certificate Service, you are entitled to display the RapidSSL Site Seal - recognized across the Internet and around the world as a symbol of authenticity, security, and trust - to build consumer confidence in your Web site.\n\nInstallation instructions for the RapidSSL Site Seal can be found on the following link:\nhttps://knowledge.rapidssl.com/support/ssl-certificate-support/index?page=content&id=SO14424&actp=LIST&viewlocale=en_US\n\nIf you require additional technical support please contact Name.com.\n\nWeb Server CERTIFICATE\n-----------------\n\n-----BEGIN CERTIFICATE-----\nMIIEqzCCA5OgAwIBAgIDBPiXMA0GCSqGSIb3DQEBCwUAMEcxCzAJBgNVBAYTAlVT\nMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMSAwHgYDVQQDExdSYXBpZFNTTCBTSEEy\nNTYgQ0EgLSBHMzAeFw0xNTA2MDkwOTI3NDJaFw0xNjA2MTEyMDA4MDdaMIGYMRMw\nEQYDVQQLEwpHVDcyMjM4NTY5MTEwLwYDVQQLEyhTZWUgd3d3LnJhcGlkc3NsLmNv\nbS9yZXNvdXJjZXMvY3BzIChjKTE1MS8wLQYDVQQLEyZEb21haW4gQ29udHJvbCBW\nYWxpZGF0ZWQgLSBSYXBpZFNTTChSKTEdMBsGA1UEAxMUbG9jYWxob3N0LmRhcGxp\nZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCd49Z2PuWyX9qF\nlURgq8E0OzMP6szDLutkYBmWsDdnekEw0mAUgmXcrhKcDog8ugDvcVqqOlice8ru\nmL9OLMmRG3ObSzLV++2ETgBexpEawSJKj7UpCpw2EJtMFvSPXrHIMhkN4rUkh1Pz\noo7+i4/MVIoDPljPgxPOtFNStECA/3kD2DlkIY/wOlkF8T1lg7A8Q92aVXiyIHmX\nubrHdT4bhr4YRbyvltEB2eA+z4LLyqz+kMKHN1TYhMJUGur/C/Le3sNrhF2veqOC\ndPBomTwpWwJ4PPmN0kqeT0N3D1CJVrt4Uj8W9N7fPsguYAehs5e06MCcAT3Dl1Eq\nNNEJw/elAgMBAAGjggFMMIIBSDAfBgNVHSMEGDAWgBTDnPP800YINLvORn+gfFvz\n4gjLWTBXBggrBgEFBQcBAQRLMEkwHwYIKwYBBQUHMAGGE2h0dHA6Ly9ndi5zeW1j\nZC5jb20wJgYIKwYBBQUHMAKGGmh0dHA6Ly9ndi5zeW1jYi5jb20vZ3YuY3J0MA4G\nA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYD\nVR0RBBgwFoIUbG9jYWxob3N0LmRhcGxpZS5jb20wKwYDVR0fBCQwIjAgoB6gHIYa\naHR0cDovL2d2LnN5bWNiLmNvbS9ndi5jcmwwDAYDVR0TAQH/BAIwADBBBgNVHSAE\nOjA4MDYGBmeBDAECATAsMCoGCCsGAQUFBwIBFh5odHRwczovL3d3dy5yYXBpZHNz\nbC5jb20vbGVnYWwwDQYJKoZIhvcNAQELBQADggEBAGlPWTo4Z7oS6E5QPVhFr0kH\nwdyGqFD3u93Nxa9L2Hfs2UrpJhhrliux/C9mxgk1O1bgVGhVvQNhiTUBSkJaIMCQ\naG5cQPBLV5u+vK+YFJHK8F+C0/vKU/xcEp4Ae1JNkIoXnfdPbGGbIS82HYp2uveD\ndtv5/hqIdLfT6TRFZ7IbhCvTR0iYzPRsOB68PSWKHyVcolK2EHIHdo7Zjs/0tEF5\n+4g/NKqX7zAMtMwQ9puPxm6M4BDnJjfiicH+4SeaRG72qpV56mHAeEOeIB4WQ61d\nQyTmfubJfT/S1IBFfwqLln/Kf3PGyOvoOYocFpkfHvzFrviqljDDIyfVWx7hQpE=\n-----END CERTIFICATE-----\n```\n\n### 05 Create Files from the provided Certificate (and intermediates)\n\n#### Domain Name\n\n`localhost.daplie.com`\n\n#### Server Certificate\n\n`my-server.crt.pem`:\n```\n-----BEGIN CERTIFICATE-----\nMIIEqzCCA5OgAwIBAgIDBPiXMA0GCSqGSIb3DQEBCwUAMEcxCzAJBgNVBAYTAlVT\nMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMSAwHgYDVQQDExdSYXBpZFNTTCBTSEEy\nNTYgQ0EgLSBHMzAeFw0xNTA2MDkwOTI3NDJaFw0xNjA2MTEyMDA4MDdaMIGYMRMw\nEQYDVQQLEwpHVDcyMjM4NTY5MTEwLwYDVQQLEyhTZWUgd3d3LnJhcGlkc3NsLmNv\nbS9yZXNvdXJjZXMvY3BzIChjKTE1MS8wLQYDVQQLEyZEb21haW4gQ29udHJvbCBW\nYWxpZGF0ZWQgLSBSYXBpZFNTTChSKTEdMBsGA1UEAxMUbG9jYWxob3N0LmRhcGxp\nZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCd49Z2PuWyX9qF\nlURgq8E0OzMP6szDLutkYBmWsDdnekEw0mAUgmXcrhKcDog8ugDvcVqqOlice8ru\nmL9OLMmRG3ObSzLV++2ETgBexpEawSJKj7UpCpw2EJtMFvSPXrHIMhkN4rUkh1Pz\noo7+i4/MVIoDPljPgxPOtFNStECA/3kD2DlkIY/wOlkF8T1lg7A8Q92aVXiyIHmX\nubrHdT4bhr4YRbyvltEB2eA+z4LLyqz+kMKHN1TYhMJUGur/C/Le3sNrhF2veqOC\ndPBomTwpWwJ4PPmN0kqeT0N3D1CJVrt4Uj8W9N7fPsguYAehs5e06MCcAT3Dl1Eq\nNNEJw/elAgMBAAGjggFMMIIBSDAfBgNVHSMEGDAWgBTDnPP800YINLvORn+gfFvz\n4gjLWTBXBggrBgEFBQcBAQRLMEkwHwYIKwYBBQUHMAGGE2h0dHA6Ly9ndi5zeW1j\nZC5jb20wJgYIKwYBBQUHMAKGGmh0dHA6Ly9ndi5zeW1jYi5jb20vZ3YuY3J0MA4G\nA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYD\nVR0RBBgwFoIUbG9jYWxob3N0LmRhcGxpZS5jb20wKwYDVR0fBCQwIjAgoB6gHIYa\naHR0cDovL2d2LnN5bWNiLmNvbS9ndi5jcmwwDAYDVR0TAQH/BAIwADBBBgNVHSAE\nOjA4MDYGBmeBDAECATAsMCoGCCsGAQUFBwIBFh5odHRwczovL3d3dy5yYXBpZHNz\nbC5jb20vbGVnYWwwDQYJKoZIhvcNAQELBQADggEBAGlPWTo4Z7oS6E5QPVhFr0kH\nwdyGqFD3u93Nxa9L2Hfs2UrpJhhrliux/C9mxgk1O1bgVGhVvQNhiTUBSkJaIMCQ\naG5cQPBLV5u+vK+YFJHK8F+C0/vKU/xcEp4Ae1JNkIoXnfdPbGGbIS82HYp2uveD\ndtv5/hqIdLfT6TRFZ7IbhCvTR0iYzPRsOB68PSWKHyVcolK2EHIHdo7Zjs/0tEF5\n+4g/NKqX7zAMtMwQ9puPxm6M4BDnJjfiicH+4SeaRG72qpV56mHAeEOeIB4WQ61d\nQyTmfubJfT/S1IBFfwqLln/Kf3PGyOvoOYocFpkfHvzFrviqljDDIyfVWx7hQpE=\n-----END CERTIFICATE-----\n```\n\n#### CA Certificates\n\n#### INTERMEDIATE\n\n`intermediate.crt.pem`:\n```\n-----BEGIN CERTIFICATE-----\nMIIEJTCCAw2gAwIBAgIDAjp3MA0GCSqGSIb3DQEBCwUAMEIxCzAJBgNVBAYTAlVT\nMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i\nYWwgQ0EwHhcNMTQwODI5MjEzOTMyWhcNMjIwNTIwMjEzOTMyWjBHMQswCQYDVQQG\nEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXUmFwaWRTU0wg\nU0hBMjU2IENBIC0gRzMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCv\nVJvZWF0eLFbG1eh/9H0WA//Qi1rkjqfdVC7UBMBdmJyNkA+8EGVf2prWRHzAn7Xp\nSowLBkMEu/SW4ib2YQGRZjEiwzQ0Xz8/kS9EX9zHFLYDn4ZLDqP/oIACg8PTH2lS\n1p1kD8mD5xvEcKyU58Okaiy9uJ5p2L4KjxZjWmhxgHsw3hUEv8zTvz5IBVV6s9cQ\nDAP8m/0Ip4yM26eO8R5j3LMBL3+vV8M8SKeDaCGnL+enP/C1DPz1hNFTvA5yT2AM\nQriYrRmIV9cE7Ie/fodOoyH5U/02mEiN1vi7SPIpyGTRzFRIU4uvt2UevykzKdkp\nYEj4/5G8V1jlNS67abZZAgMBAAGjggEdMIIBGTAfBgNVHSMEGDAWgBTAephojYn7\nqwVkDBF9qn1luMrMTjAdBgNVHQ4EFgQUw5zz/NNGCDS7zkZ/oHxb8+IIy1kwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwNQYDVR0fBC4wLDAqoCig\nJoYkaHR0cDovL2cuc3ltY2IuY29tL2NybHMvZ3RnbG9iYWwuY3JsMC4GCCsGAQUF\nBwEBBCIwIDAeBggrBgEFBQcwAYYSaHR0cDovL2cuc3ltY2QuY29tMEwGA1UdIARF\nMEMwQQYKYIZIAYb4RQEHNjAzMDEGCCsGAQUFBwIBFiVodHRwOi8vd3d3Lmdlb3Ry\ndXN0LmNvbS9yZXNvdXJjZXMvY3BzMA0GCSqGSIb3DQEBCwUAA4IBAQCjWB7GQzKs\nrC+TeLfqrlRARy1+eI1Q9vhmrNZPc9ZE768LzFvB9E+aj0l+YK/CJ8cW8fuTgZCp\nfO9vfm5FlBaEvexJ8cQO9K8EWYOHDyw7l8NaEpt7BDV7o5UzCHuTcSJCs6nZb0+B\nkvwHtnm8hEqddwnxxYny8LScVKoSew26T++TGezvfU5ho452nFnPjJSxhJf3GrkH\nuLLGTxN5279PURt/aQ1RKsHWFf83UTRlUfQevjhq7A6rvz17OQV79PP7GqHQyH5O\nZI3NjGFVkP46yl0lD/gdo0p0Vk8aVUBwdSWmMy66S6VdU5oNMOGNX2Esr8zvsJmh\ngP8L8mJMcCaY\n-----END CERTIFICATE-----\n```\n\n#### ROOT\n\n`root.crt.pem`:\n```\n-----BEGIN CERTIFICATE-----\nMIIDVDCCAjygAwIBAgIDAjRWMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVT\nMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i\nYWwgQ0EwHhcNMDIwNTIxMDQwMDAwWhcNMjIwNTIxMDQwMDAwWjBCMQswCQYDVQQG\nEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3Qg\nR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2swYYzD9\n9BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9mOSm9BXiLnTjoBbdq\nfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIuT8rxh0PBFpVXLVDv\niS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6cJmTM386DGXHKTubU\n1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa9k0+\nbw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5aszPeE4uwc2hGKceeoW\nMPRfwCvocWvk+QIDAQABo1MwUTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTA\nephojYn7qwVkDBF9qn1luMrMTjAfBgNVHSMEGDAWgBTAephojYn7qwVkDBF9qn1l\nuMrMTjANBgkqhkiG9w0BAQUFAAOCAQEANeMpauUvXVSOKVCUn5kaFOSPeCpilKIn\nZ57QzxpeR+nBsqTP3UEaBU6bS+5Kb1VSsyShNwrrZHYqLizz/Tt1kL/6cdjHPTfS\ntQWVYrmm3ok9Nns4d0iXrKYgjy6myQzCsplFAMfOEVEiIuCl6rYVSAlk6l5PdPcF\nPseKUgzbFbS9bZvlxrFUaKnjaZC2mqUPuLk/IH2uSrW4nOQdtqvmlKXBx4Ot2/Un\nhw4EbNX/3aBd7YdStysVAq45pmp06drE57xNNB6pXE0zX5IJL4hmXXeXxx12E6nV\n5fEWCRE11azbJHFwLJhWC9kXtNHjUStedejV0NxPNO3CBWaAocvmMw==\n-----END CERTIFICATE-----\n```\n\n### 06 Bundle the certificates (for Caddy et al)\n\n```bash\ncat server/my-server.key.pem > privkey.pem\n\ncat server/my-server.crt.pem > cert.pem\n\ncat ca/intermediate.crt.pem > chain.pem\n\ncat server/my-server.crt.pem ca/intermediate.crt.pem > fullchain.pem\n\ncat server/root.crt.pem > root.pem\n```\n\n**Note**: The order *may* be important. I believe it *should* be from least to greatest authority as seen above.\n",
  "readmeFilename": "README.md",
  "_id": "localhost.daplie.com-certificates@1.1.2",
  "dist": {
    "shasum": "ce852345ceb3d2ee3269e47e9c49fa70de3254e6"
  },
  "_from": "localhost.daplie.com-certificates@^1.1.2",
  "_resolved": "https://registry.npmjs.org/localhost.daplie.com-certificates/-/localhost.daplie.com-certificates-1.1.2.tgz"
}
